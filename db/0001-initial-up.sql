CREATE TABLE IF NOT EXISTS "user" (
  id SERIAL PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  username VARCHAR(50) NOT NULL UNIQUE,
  profile_picture VARCHAR(255) NULL,
  website VARCHAR(255) NULL,
  biography VARCHAR(255) NULL,
  phone_number VARCHAR(266) NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS "user_followers" (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  follower_id INTEGER NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES "user"(id),
  FOREIGN KEY (follower_id) REFERENCES "user"(id)
);

CREATE TABLE IF NOT EXISTS "photo" (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  caption VARCHAR (255) NULL,
  image_path VARCHAR (255) NOT NULL,
  image_size INTEGER NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES "user"(id)
);

CREATE TABLE IF NOT EXISTS "comment" (
  id SERIAL PRIMARY KEY,
  author_id INTEGER NOT NULL,
  text VARCHAR (255) NOT NULL,
  FOREIGN KEY (author_id) REFERENCES "user"(id)
);

CREATE TABLE IF NOT EXISTS "photo_comments" (
  id SERIAL PRIMARY KEY,
  photo_id INTEGER,
  comment_id INTEGER,
  FOREIGN KEY (photo_id) REFERENCES "photo"(id),
  FOREIGN KEY (comment_id) REFERENCES "comment"(id)
);

CREATE TABLE IF NOT EXISTS "like" (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  photo_id INTEGER NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  FOREIGN KEY (user_id) REFERENCES "user"(id)
);